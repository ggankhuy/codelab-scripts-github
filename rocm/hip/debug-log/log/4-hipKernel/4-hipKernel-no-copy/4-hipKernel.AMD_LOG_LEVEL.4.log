env_nocopy_str: 1
Bypassing hipMalloc/malloc...
Bypassing hipMemcpy...
:3:rocdevice.cpp            :418 : 231293555469 us: 142677: [tid:0x7fa93a134080] Initializing HSA stack.
GG: ROCr: GetEnvVar(HSA_ENABLED_SDMA): 
GG: ROCr: enable_sdma_: 2
GG: ROCr: GetEnvVar(HSA_ENABLED_SDMA): 
GG: ROCr: enable_sdma_: 2
GG: ROCr: GpuAgent.constructor, entered...
 GG: ROCr: !HSA_LARGE_MODEL enabled and defined(__linux__)
  GG: ROCr: max_queues_ : 128
GG: ROCr: GpuAgent.constructor, entered...
 GG: ROCr: !HSA_LARGE_MODEL enabled and defined(__linux__)
  GG: ROCr: max_queues_ : 128
GG: ROCr: GpuAgent.constructor, entered...
 GG: ROCr: !HSA_LARGE_MODEL enabled and defined(__linux__)
  GG: ROCr: max_queues_ : 128
GG: ROCr: GpuAgent.constructor, entered...
 GG: ROCr: !HSA_LARGE_MODEL enabled and defined(__linux__)
  GG: ROCr: max_queues_ : 128
GG: ROCr: GpuAgent::InitDma: entered...
  GG: ROCr: InitDma(): queues_[QueueBlitOnly].reset(queue_lambda): &queue_lambda/queue_lambda: 0x7ffe659608b8
  GG: ROCr: InitDma(): queues_[QueueUtility].reset(queue_lambda): &queue_lambda/queue_lambda: ;0x7ffe659608b8
  GG: ROCr: InitDma(): blit_cnt set to:9
  GG: ROCr: InitDma: blits_[BlitDevToDev].reset([this]() {};
  GG: ROCr: InitDma(): blits_[BlitHostToDev].reset([blit_lambda, this]() { return blist_lambda(false, queues_[QueueBlitOnly], true) ; } 
  GG: ROCr: InitDma(): blits_[BlitDevToHost].reset([blit_lambda, this]() { return blit_lambda(false, queues_[QueueUtility], false); } 
  GG: ROCr: InitDma(): setup xgmi engites...reset with blit_lambda(true, queues_[QueueUtility], false)
  GG: ROCr: InitDma(): xgmi No: 3, blits_[idx].reset([blit_lambda, this]() { return blist_lambda(true, queues_[QueueUtility], false); 
  GG: ROCr: InitDma(): xgmi No: 4, blits_[idx].reset([blit_lambda, this]() { return blist_lambda(true, queues_[QueueUtility], false); 
  GG: ROCr: InitDma(): xgmi No: 5, blits_[idx].reset([blit_lambda, this]() { return blist_lambda(true, queues_[QueueUtility], false); 
  GG: ROCr: InitDma(): xgmi No: 6, blits_[idx].reset([blit_lambda, this]() { return blist_lambda(true, queues_[QueueUtility], false); 
  GG: ROCr: InitDma(): xgmi No: 7, blits_[idx].reset([blit_lambda, this]() { return blist_lambda(true, queues_[QueueUtility], false); 
  GG: ROCr: InitDma(): xgmi No: 8, blits_[idx].reset([blit_lambda, this]() { return blist_lambda(true, queues_[QueueUtility], false); 
  GG: ROCr: InitDma(): InitGWS...
GG: ROCr: GpuAgent::InitDma: entered...
  GG: ROCr: InitDma(): queues_[QueueBlitOnly].reset(queue_lambda): &queue_lambda/queue_lambda: 0x7ffe659608b8
  GG: ROCr: InitDma(): queues_[QueueUtility].reset(queue_lambda): &queue_lambda/queue_lambda: ;0x7ffe659608b8
  GG: ROCr: InitDma(): blit_cnt set to:9
  GG: ROCr: InitDma: blits_[BlitDevToDev].reset([this]() {};
  GG: ROCr: InitDma(): blits_[BlitHostToDev].reset([blit_lambda, this]() { return blist_lambda(false, queues_[QueueBlitOnly], true) ; } 
  GG: ROCr: InitDma(): blits_[BlitDevToHost].reset([blit_lambda, this]() { return blit_lambda(false, queues_[QueueUtility], false); } 
  GG: ROCr: InitDma(): setup xgmi engites...reset with blit_lambda(true, queues_[QueueUtility], false)
  GG: ROCr: InitDma(): xgmi No: 3, blits_[idx].reset([blit_lambda, this]() { return blist_lambda(true, queues_[QueueUtility], false); 
  GG: ROCr: InitDma(): xgmi No: 4, blits_[idx].reset([blit_lambda, this]() { return blist_lambda(true, queues_[QueueUtility], false); 
  GG: ROCr: InitDma(): xgmi No: 5, blits_[idx].reset([blit_lambda, this]() { return blist_lambda(true, queues_[QueueUtility], false); 
  GG: ROCr: InitDma(): xgmi No: 6, blits_[idx].reset([blit_lambda, this]() { return blist_lambda(true, queues_[QueueUtility], false); 
  GG: ROCr: InitDma(): xgmi No: 7, blits_[idx].reset([blit_lambda, this]() { return blist_lambda(true, queues_[QueueUtility], false); 
  GG: ROCr: InitDma(): xgmi No: 8, blits_[idx].reset([blit_lambda, this]() { return blist_lambda(true, queues_[QueueUtility], false); 
  GG: ROCr: InitDma(): InitGWS...
GG: ROCr: GpuAgent::InitDma: entered...
  GG: ROCr: InitDma(): queues_[QueueBlitOnly].reset(queue_lambda): &queue_lambda/queue_lambda: 0x7ffe659608b8
  GG: ROCr: InitDma(): queues_[QueueUtility].reset(queue_lambda): &queue_lambda/queue_lambda: ;0x7ffe659608b8
  GG: ROCr: InitDma(): blit_cnt set to:9
  GG: ROCr: InitDma: blits_[BlitDevToDev].reset([this]() {};
  GG: ROCr: InitDma(): blits_[BlitHostToDev].reset([blit_lambda, this]() { return blist_lambda(false, queues_[QueueBlitOnly], true) ; } 
  GG: ROCr: InitDma(): blits_[BlitDevToHost].reset([blit_lambda, this]() { return blit_lambda(false, queues_[QueueUtility], false); } 
  GG: ROCr: InitDma(): setup xgmi engites...reset with blit_lambda(true, queues_[QueueUtility], false)
  GG: ROCr: InitDma(): xgmi No: 3, blits_[idx].reset([blit_lambda, this]() { return blist_lambda(true, queues_[QueueUtility], false); 
  GG: ROCr: InitDma(): xgmi No: 4, blits_[idx].reset([blit_lambda, this]() { return blist_lambda(true, queues_[QueueUtility], false); 
  GG: ROCr: InitDma(): xgmi No: 5, blits_[idx].reset([blit_lambda, this]() { return blist_lambda(true, queues_[QueueUtility], false); 
  GG: ROCr: InitDma(): xgmi No: 6, blits_[idx].reset([blit_lambda, this]() { return blist_lambda(true, queues_[QueueUtility], false); 
  GG: ROCr: InitDma(): xgmi No: 7, blits_[idx].reset([blit_lambda, this]() { return blist_lambda(true, queues_[QueueUtility], false); 
  GG: ROCr: InitDma(): xgmi No: 8, blits_[idx].reset([blit_lambda, this]() { return blist_lambda(true, queues_[QueueUtility], false); 
  GG: ROCr: InitDma(): InitGWS...
GG: ROCr: GpuAgent::InitDma: entered...
  GG: ROCr: InitDma(): queues_[QueueBlitOnly].reset(queue_lambda): &queue_lambda/queue_lambda: 0x7ffe659608b8
  GG: ROCr: InitDma(): queues_[QueueUtility].reset(queue_lambda): &queue_lambda/queue_lambda: ;0x7ffe659608b8
  GG: ROCr: InitDma(): blit_cnt set to:9
  GG: ROCr: InitDma: blits_[BlitDevToDev].reset([this]() {};
  GG: ROCr: InitDma(): blits_[BlitHostToDev].reset([blit_lambda, this]() { return blist_lambda(false, queues_[QueueBlitOnly], true) ; } 
  GG: ROCr: InitDma(): blits_[BlitDevToHost].reset([blit_lambda, this]() { return blit_lambda(false, queues_[QueueUtility], false); } 
  GG: ROCr: InitDma(): setup xgmi engites...reset with blit_lambda(true, queues_[QueueUtility], false)
  GG: ROCr: InitDma(): xgmi No: 3, blits_[idx].reset([blit_lambda, this]() { return blist_lambda(true, queues_[QueueUtility], false); 
  GG: ROCr: InitDma(): xgmi No: 4, blits_[idx].reset([blit_lambda, this]() { return blist_lambda(true, queues_[QueueUtility], false); 
  GG: ROCr: InitDma(): xgmi No: 5, blits_[idx].reset([blit_lambda, this]() { return blist_lambda(true, queues_[QueueUtility], false); 
  GG: ROCr: InitDma(): xgmi No: 6, blits_[idx].reset([blit_lambda, this]() { return blist_lambda(true, queues_[QueueUtility], false); 
  GG: ROCr: InitDma(): xgmi No: 7, blits_[idx].reset([blit_lambda, this]() { return blist_lambda(true, queues_[QueueUtility], false); 
  GG: ROCr: InitDma(): xgmi No: 8, blits_[idx].reset([blit_lambda, this]() { return blist_lambda(true, queues_[QueueUtility], false); 
  GG: ROCr: InitDma(): InitGWS...
:3:comgrctx.cpp             :33  : 231293640672 us: 142677: [tid:0x7fa93a134080] Loading COMGR library.
:3:rocdevice.cpp            :209 : 231293640735 us: 142677: [tid:0x7fa93a134080] Numa selects cpu agent[0]=0xfe32a0(fine=0xffa440,coarse=0x10d3ff0) for gpu agent=0x10d7900
:3:rocdevice.cpp            :1613: 231293641038 us: 142677: [tid:0x7fa93a134080] HMM support: 1, xnack: 0, direct host access: 0

:4:rocdevice.cpp            :1920: 231293641382 us: 142677: [tid:0x7fa93a134080] Allocate hsa host memory 0x7fa82ea00000, size 0x101000
:4:rocdevice.cpp            :1920: 231293641979 us: 142677: [tid:0x7fa93a134080] Allocate hsa host memory 0x7fa82e800000, size 0x101000
:4:rocdevice.cpp            :2056: 231293642057 us: 142677: [tid:0x7fa93a134080] Allocate hsa device memory 0x7fa82e400000, size 0x100000
:3:rocdevice.cpp            :209 : 231293642086 us: 142677: [tid:0x7fa93a134080] Numa selects cpu agent[0]=0xfe32a0(fine=0xffa440,coarse=0x10d3ff0) for gpu agent=0x11672a0
:3:rocdevice.cpp            :1613: 231293642204 us: 142677: [tid:0x7fa93a134080] HMM support: 1, xnack: 0, direct host access: 0

:4:rocdevice.cpp            :1920: 231293642555 us: 142677: [tid:0x7fa93a134080] Allocate hsa host memory 0x7fa82e200000, size 0x101000
:4:rocdevice.cpp            :1920: 231293642972 us: 142677: [tid:0x7fa93a134080] Allocate hsa host memory 0x7fa82e000000, size 0x101000
:4:rocdevice.cpp            :2056: 231293643042 us: 142677: [tid:0x7fa93a134080] Allocate hsa device memory 0x7fa82dc00000, size 0x100000
:3:rocdevice.cpp            :209 : 231293643070 us: 142677: [tid:0x7fa93a134080] Numa selects cpu agent[0]=0xfe32a0(fine=0xffa440,coarse=0x10d3ff0) for gpu agent=0x116b650
:3:rocdevice.cpp            :1613: 231293643186 us: 142677: [tid:0x7fa93a134080] HMM support: 1, xnack: 0, direct host access: 0

:4:rocdevice.cpp            :1920: 231293643547 us: 142677: [tid:0x7fa93a134080] Allocate hsa host memory 0x7fa82da00000, size 0x101000
:4:rocdevice.cpp            :1920: 231293643960 us: 142677: [tid:0x7fa93a134080] Allocate hsa host memory 0x7fa82d800000, size 0x101000
:4:rocdevice.cpp            :2056: 231293644031 us: 142677: [tid:0x7fa93a134080] Allocate hsa device memory 0x7fa82d400000, size 0x100000
:3:rocdevice.cpp            :209 : 231293644061 us: 142677: [tid:0x7fa93a134080] Numa selects cpu agent[0]=0xfe32a0(fine=0xffa440,coarse=0x10d3ff0) for gpu agent=0x116fa30
:3:rocdevice.cpp            :1613: 231293644176 us: 142677: [tid:0x7fa93a134080] HMM support: 1, xnack: 0, direct host access: 0

GG: ROCclr: SvmBuffer::malloc entered...
:4:rocdevice.cpp            :1920: 231293644214 us: 142677: [tid:0x7fa93a134080] Allocate hsa host memory 0x7fa939f94000, size 0xa0
:4:rocdevice.cpp            :1920: 231293644585 us: 142677: [tid:0x7fa93a134080] Allocate hsa host memory 0x7fa82d200000, size 0x101000
:4:rocdevice.cpp            :1920: 231293644980 us: 142677: [tid:0x7fa93a134080] Allocate hsa host memory 0x7fa82d000000, size 0x101000
:4:rocdevice.cpp            :2056: 231293645050 us: 142677: [tid:0x7fa93a134080] Allocate hsa device memory 0x7fa82cc00000, size 0x100000
:4:runtime.cpp              :83  : 231293645058 us: 142677: [tid:0x7fa93a134080] init
:3:hip_context.cpp          :50  : 231293645061 us: 142677: [tid:0x7fa93a134080] Direct Dispatch: 1
:3:hip_platform.cpp         :213 : 231293645086 us: 142677: [tid:0x7fa93a134080] __hipPushCallConfiguration: Returned hipSuccess : 
:3:hip_platform.cpp         :220 : 231293645098 us: 142677: [tid:0x7fa93a134080] [32m__hipPopCallConfiguration ( {1704332920,32766,0}, {1,0,17614416}, 0x7ffe65960f18, 0x7ffe65960f10 )[0m
:3:hip_platform.cpp         :229 : 231293645102 us: 142677: [tid:0x7fa93a134080] __hipPopCallConfiguration: Returned hipSuccess : 
:3:hip_module.cpp           :508 : 231293645117 us: 142677: [tid:0x7fa93a134080] [32mhipLaunchKernel ( 0x401ef8, {1,1,1}, {256,1,1}, 0x7ffe65960f20, 0, stream:<null> )[0m
:3:devprogram.cpp           :2705: 231293645733 us: 142677: [tid:0x7fa93a134080] Using Code Object V4.
GG: ROCclr: -------------------------------
GG: ROCclr: Program(public RuntimeObject)::load() entered...
  GG: ROCclr: Program::(RuntimeObject): Kernel Name: 
GG: ROCclr: bool Program(public HeapObject)::load() entered...
  GG: ROCclr: bool Program(public HeapObject)::load(): Kernel Name: _Z2k1v, 
GG: ROCclr: bool Program(public HeapObject)::loadLC() entered...
GG: ROCclr: setKernels entered...
GG: ROCr:  hsa_executable_freeze() entered...
GG: ROCr: AmdHsaCodeLoader::FreezeExecutable() entered...
GG: ROCr: ExecutableImpl::Freeze() entered...
GG: ROCr: LoaderContext::SegmentFreeze() entered...
GG: ROCr: RegionMemory::Freeze() entered...
GG: ROCr: GpuAgent::DmaCopy(dst, src, size)..entered.
GG: ROCr: GpuAgent::Dmacopy(): return blits_[BlitDevtoDev]->SubmitLinearCopyCommand(dst,src,size)...
    GG: ROCr:: lazy_ptr::print_state: obj.get():  0, target avail?: 1
GG: ROCr: GpuAgent::DmaCopy(): BlitDevToDev: 0, isSMDA?:   GG: ROCr: ROCr: InitDma(): LAMBDA: blits_[BlitDevToDev].reset(<unnamed_lambda>[this]() entered...
GG: ROCr: ROCr: InitDma(): LAMBDA: queue_lambda(): entered: 
GG: ROCr: GpuAgent::CreateInterceptibleQueue entered...
GG: ROCr: GpuAgent::QueueCreate entered...
  GG:QueueCreate(): size: 64, type: 0
GG: ROCr: GpuAgent::QueueCreate queues_[QueueUtility].touch()...
  GG: ROCr: GpuAgent::QueueCreate:  newly created AqlQueue, addr/size: 0x1187170/64
  GG: ROCr: GpuAgent::QueueCreate:  update * queue (from AqlQueue), addr/base_address/size: 0x1187170/0x7fa939f88000/64
GG: ROCr: GpuAgent::CreateBlitKernel() entered...
0
GG: ROCr: BlitKernel::SubmitLinearCopyCommand(dst, src, size): entered.
GG: ROCr: BlitKernel::SubmitLinearCopyCommand(dst, src, size, dep_signals, out_signal): entered.
  GG: ROCr: dst, src: 0x7fa939f90000, 0x7fa939f8c000size: 8304
  GG: ROCr: num_barrier_packet: 0
  GG: ROCr: total_num_packet: 1
GG: ROCr: print_save_buffer: buffer , size: 4096
  GG: ROCr: num_workitems(aligned): 30720, num_cus_:120 kernel_code: 0x11898a8
  GG: ROCr: src_start/dst_start/phase1_size: 7fa939f8c000/7fa939f90000/0
  GG: ROCr: phase2_block/phase2_size: 78000/0
  GG: ROCr: phase3_size: 2070
GG: ROCr: BlitKernel::PopulateQueue: entered (2)
  GG: ROCr: index, code_handle, args, grid_size_x, completion_signal: 0, 7fa939f78000, 0x7fa939f7a000, 7800, ??? 
  GG: ROCr: (pkt) ---------------------.
  GG: ROCr: (pkt) packet: 0x7fa939f88000, queue_buffer: 0x7fa939f88000, index: 0, queue_bitmask_:3f
  GG: ROCr: (pkt) dumpAqlPacket (dispatch) entered.
  GG: ROCr: (pkt) HSA_PACKET_HEADER_TYPE:                             HSA_PACKET_TYPE_KERNEL_DISPATCH
  GG: ROCr: (pkt) HSA_PACKET_HEADER_BARRIER (1-bit):                  0
  GG: ROCr: (pkt) HSA_PACKET_HEADER_(SC)ACQUIRE_FENCE_SCOPE (2-bit):  400
  GG: ROCr: (pkt) HSA_PACKET_HEADER_(SC)ACQUIRE_FENCE_SCOPE (2-bit):  1400
  GG: ROCr: (pkt) workgroup size (x,y,z):                                   40, 1, 1
  GG: ROCr: (pkt) grid size (x,y,z):                                        7800, 1, 1
  GG: ROCr: (pkt) kernel_object:                                            7fa939f78000
  GG: ROCr: (pkt) kernelarg_address:                                        0x7fa939f7a000
  GG: ROCr: (pkt) completion signal:                                        7fa939faeb00
GG: ROCr: GpuAgent::InvalidateCodeCaches()
GG: ROCr: AqlQueue::ExecutePM() entered...
GG: ROCclr: Program(public HeapObject)::runInitKernel() entered...
GG: ROCclr: Program(public HeapObject)::runInitFiniKernel()(2) entered...
:3:devprogram.cpp           :3011: 231293659047 us: 142677: [tid:0x7fa93a134080] For Init/Fini: Kernel Name: _Z2k1v
:3:hip_module.cpp           :361 : 231293659074 us: 142677: [tid:0x7fa93a134080] [32mihipModuleLaunchKernel ( 0x0x11849d0, 256, 1, 1, 256, 1, 1, 0, stream:<null>, 0x7ffe65960f20, char array:<null>, event:0, event:0, 0, 0 )[0m
GG: hipamd: hipamd: ihipModuleLaunchKernel entered...
GG: ROCclr: VirtualGPU::VirtualGPU (constructor) entered...
GG: ROCclr: VirtualGPU::VirtualGPU: device: 0x11769d0
GG: ROCclr: VirtualGPU::Create() entered...
  GG: ROCclr: VirtualGPU::Create(): requesting queue, size: 1000
GG: ROCclr: acquireQueue entered...
:3:rocdevice.cpp            :2692: 231293659090 us: 142677: [tid:0x7fa93a134080] number of allocated hardware queues with low priority: 0, with normal priority: 0, with high priority: 0, maximum per priority is: 4
  GG: ROCclr: queue_size: 1000, queue_max_packets/queue_size_hint: 20000/1000
GG: ROCr:  hsa_queue_create entered...
  GG: ROCr:  agent handle: ?? ,size: 1000, type: 0, source: ?? 
GG: ROCr: GpuAgent::QueueCreate entered...
  GG:QueueCreate(): size: 1000, type: 0
GG: ROCr: GpuAgent::QueueCreate queues_[QueueUtility].touch()...
  GG: ROCr: GpuAgent::QueueCreate:  newly created AqlQueue, addr/size: 0x1189240/1000
  GG: ROCr: GpuAgent::QueueCreate:  update * queue (from AqlQueue), addr/base_address/size: 0x1189240/0x7fa92ed80000/1000
  GG: ROCclr: acquireQueue: created queue (ptr): 0x7fa939f72000, size: 1000
:3:rocdevice.cpp            :2773: 231293670272 us: 142677: [tid:0x7fa93a134080] created hardware queue 0x7fa939f72000 with size 4096 with priority 1, cooperative: 0
  GG: ROCclr: VirtualGpu::Create(): create gpu_queue: 0x7fa939f72000
:4:rocdevice.cpp            :1920: 231293670484 us: 142677: [tid:0x7fa93a134080] Allocate hsa host memory 0x7fa92ec80000, size 0x80000
GG: ROCclr: BlitProgram::create() entered...
  GG: ROCclr: BlitProgram::create(): kernels: extern void __amd_fillBufferAligned(__global uchar*, __global ushort*, __global uint*, __global ulong*, __constant uchar*, uint, ulong, ulong); extern void __amd_fillBufferAligned2D(__global uchar*, __global ushort*, __global uint*, __global ulong*, __constant uchar*, uint, ulong, ulong, ulong, ulong); extern void __amd_copyBuffer(__global uchar*, __global uchar*, ulong, ulong, ulong, uint); extern void __amd_copyBufferAligned(__global uint*, __global uint*, ulong, ulong, ulong, uint); extern void __amd_copyBufferRect(__global uchar*, __global uchar*, ulong4, ulong4, ulong4); extern void __amd_copyBufferRectAligned(__global uint*, __global uint*, ulong4, ulong4, ulong4); __kernel void __amd_rocclr_fillBufferAligned(__global uchar* bufUChar, __global ushort* bufUShort, __global uint* bufUInt, __global ulong* bufULong, __constant uchar* pattern, uint patternSize, ulong offset, ulong size) { __amd_fillBufferAligned(bufUChar, bufUShort, bufUInt, bufULong, pattern, patternSize, offset, size); } __kernel void __amd_rocclr_fillBufferAligned2D(__global uchar* bufUChar, __global ushort* bufUShort, __global uint* bufUInt, __global ulong* bufULong, __constant uchar* pattern, uint patternSize, ulong offset, ulong width, ulong height, ulong pitch) { __amd_fillBufferAligned2D(bufUChar, bufUShort, bufUInt, bufULong, pattern, patternSize, offset, width, height, pitch); } __kernel void __amd_rocclr_copyBuffer(__global uchar* srcI, __global uchar* dstI, ulong srcOrigin, ulong dstOrigin, ulong size, uint remain) { __amd_copyBuffer(srcI, dstI, srcOrigin, dstOrigin, size, remain); } __kernel void __amd_rocclr_copyBufferAligned(__global uint* src, __global uint* dst, ulong srcOrigin, ulong dstOrigin, ulong size, uint alignment) { __amd_copyBufferAligned(src, dst, srcOrigin, dstOrigin, size, alignment); } __kernel void __amd_rocclr_copyBufferRect(__global uchar* src, __global uchar* dst, ulong4 srcRect, ulong4 dstRect, ulong4 size) { __amd_copyBufferRect(src, dst, srcRect, dstRect, size); } __kernel void __amd_rocclr_copyBufferRectAligned(__global uint* src, __global uint* dst, ulong4 srcRect, ulong4 dstRect, ulong4 size) { __amd_copyBufferRectAligned(src, dst, srcRect, dstRect, size); }extern void __amd_streamOpsWrite(__global uint*, __global ulong*, ulong, ulong); extern void __amd_streamOpsWait(__global uint*,__global ulong*, ulong, ulong, ulong); __kernel void __amd_rocclr_streamOpsWrite(__global uint* ptrInt, __global ulong* ptrUlong, ulong value, ulong sizeBytes) { __amd_streamOpsWrite(ptrInt, ptrUlong, value, sizeBytes); } __kernel void __amd_rocclr_streamOpsWait(__global uint* ptrInt, __global ulong* ptrUlong, ulong value, ulong flags, ulong mask) { __amd_streamOpsWait(ptrInt, ptrUlong, value, flags, mask); }extern void __ockl_gws_init(uint nwm1, uint rid); __kernel void __amd_rocclr_gwsInit(uint value) { __ockl_gws_init(value, 0); }
GG: ROCclr: program(runtimeObject): constructor entered: 
:3:devprogram.cpp           :2705: 231293815558 us: 142677: [tid:0x7fa93a134080] Using Code Object V4.
GG: ROCclr: -------------------------------
GG: ROCclr: Program(public RuntimeObject)::load() entered...
  GG: ROCclr: Program::(RuntimeObject): Kernel Name: 
GG: ROCclr: bool Program(public HeapObject)::load() entered...
  GG: ROCclr: bool Program(public HeapObject)::load(): Kernel Name: __amd_rocclr_copyBufferAligned, __amd_rocclr_fillBufferAligned2D, 
GG: ROCclr: bool Program(public HeapObject)::loadLC() entered...
GG: ROCclr: setKernels entered...
GG: ROCr:  hsa_executable_freeze() entered...
GG: ROCr: AmdHsaCodeLoader::FreezeExecutable() entered...
GG: ROCr: ExecutableImpl::Freeze() entered...
GG: ROCr: LoaderContext::SegmentFreeze() entered...
GG: ROCr: RegionMemory::Freeze() entered...
GG: ROCr: GpuAgent::DmaCopy(dst, src, size)..entered.
GG: ROCr: GpuAgent::Dmacopy(): return blits_[BlitDevtoDev]->SubmitLinearCopyCommand(dst,src,size)...
    GG: ROCr:: lazy_ptr::print_state: obj.get():  0x1187830, target avail?: 0
GG: ROCr: GpuAgent::DmaCopy(): BlitDevToDev: 0, isSMDA?: 0
GG: ROCr: BlitKernel::SubmitLinearCopyCommand(dst, src, size): entered.
GG: ROCr: BlitKernel::SubmitLinearCopyCommand(dst, src, size, dep_signals, out_signal): entered.
  GG: ROCr: dst, src: 0x7fa939f64000, 0x7fa939f5c000size: 5070
  GG: ROCr: num_barrier_packet: 0
  GG: ROCr: total_num_packet: 1
GG: ROCr: print_save_buffer: buffer , size: 1000
  GG: ROCr: num_workitems(aligned): 7800, num_cus_:78 kernel_code: 0x11898a8
  GG: ROCr: src_start/dst_start/phase1_size: 7fa939f5c000/7fa939f64000/0
  GG: ROCr: phase2_block/phase2_size: 78000/0
  GG: ROCr: phase3_size: 5070
GG: ROCr: BlitKernel::PopulateQueue: entered (2)
  GG: ROCr: index, code_handle, args, grid_size_x, completion_signal: 2, 7fa939f78000, 0x7fa939f7a060, 7800, ??? 
  GG: ROCr: (pkt) ---------------------.
  GG: ROCr: (pkt) packet: 0x7fa939f88080, queue_buffer: 0x7fa939f88000, index: 2, queue_bitmask_:3f
  GG: ROCr: (pkt) dumpAqlPacket (dispatch) entered.
  GG: ROCr: (pkt) HSA_PACKET_HEADER_TYPE:                             HSA_PACKET_TYPE_KERNEL_DISPATCH
  GG: ROCr: (pkt) HSA_PACKET_HEADER_BARRIER (1-bit):                  0
  GG: ROCr: (pkt) HSA_PACKET_HEADER_(SC)ACQUIRE_FENCE_SCOPE (2-bit):  400
  GG: ROCr: (pkt) HSA_PACKET_HEADER_(SC)ACQUIRE_FENCE_SCOPE (2-bit):  1400
  GG: ROCr: (pkt) workgroup size (x,y,z):                                   40, 1, 1
  GG: ROCr: (pkt) grid size (x,y,z):                                        7800, 1, 1
  GG: ROCr: (pkt) kernel_object:                                            7fa939f78000
  GG: ROCr: (pkt) kernelarg_address:                                        0x7fa939f7a060
  GG: ROCr: (pkt) completion signal:                                        7fa939faeb00
GG: ROCr: GpuAgent::InvalidateCodeCaches()
GG: ROCr: AqlQueue::ExecutePM() entered...
GG: ROCclr: Program(public HeapObject)::runInitKernel() entered...
GG: ROCclr: Program(public HeapObject)::runInitFiniKernel()(2) entered...
:3:devprogram.cpp           :3011: 231293816568 us: 142677: [tid:0x7fa93a134080] For Init/Fini: Kernel Name: __amd_rocclr_copyBufferAligned
:3:devprogram.cpp           :3011: 231293816571 us: 142677: [tid:0x7fa93a134080] For Init/Fini: Kernel Name: __amd_rocclr_streamOpsWait
:3:devprogram.cpp           :3011: 231293816573 us: 142677: [tid:0x7fa93a134080] For Init/Fini: Kernel Name: __amd_rocclr_copyBuffer
:3:devprogram.cpp           :3011: 231293816574 us: 142677: [tid:0x7fa93a134080] For Init/Fini: Kernel Name: __amd_rocclr_streamOpsWrite
:3:devprogram.cpp           :3011: 231293816576 us: 142677: [tid:0x7fa93a134080] For Init/Fini: Kernel Name: __amd_rocclr_copyBufferRectAligned
:3:devprogram.cpp           :3011: 231293816577 us: 142677: [tid:0x7fa93a134080] For Init/Fini: Kernel Name: __amd_rocclr_gwsInit
:3:devprogram.cpp           :3011: 231293816579 us: 142677: [tid:0x7fa93a134080] For Init/Fini: Kernel Name: __amd_rocclr_copyBufferRect
:3:devprogram.cpp           :3011: 231293816580 us: 142677: [tid:0x7fa93a134080] For Init/Fini: Kernel Name: __amd_rocclr_fillBufferAligned
:3:devprogram.cpp           :3011: 231293816582 us: 142677: [tid:0x7fa93a134080] For Init/Fini: Kernel Name: __amd_rocclr_fillBufferAligned2D
:4:rocmemory.cpp            :941 : 231293816647 us: 142677: [tid:0x7fa93a134080] Locking to pool 0x10d3ff0, size 0x1000, HostPtr = 0x1688000, DevPtr = 0x7fa939f5a000
GG: ROCclr: VirtualGPU::HwQueueTracker::Create() entered...
GG: ROCclr: command::enqueue() entered... command: 0x1269e30, HostQueue * queue_: 0x118a6e0
:4:command.cpp              :343 : 231293816750 us: 142677: [tid:0x7fa93a134080] command is enqueued: 0x1269e30
GG: ROCclr: NDRangeKernelCommand::submit() entered...
GG: ROCclr: VirtualGPU::submitKernel entered...
GG: ROCclr: VirtualGPU::submitKernelInternal entered...
  GG: ROCclr: ShaderName: (2): _Z2k1v
:3:rocvirtual.cpp           :2749: 231293816756 us: 142677: [tid:0x7fa93a134080] ShaderName : _Z2k1v
:4:rocvirtual.cpp           :854 : 231293816779 us: 142677: [tid:0x7fa93a134080] HWq=0x7fa939f72000, Dispatch Header = 0xb02 (type=2, barrier=1, acquire=1, release=1), setup=3, grid=[256, 1, 1], workgroup=[256, 1, 1], private_seg_size=0, group_seg_size=0, kernel_obj=0x7fa939f90440, kernarg_address=0x7fa92ec80000, completion_signal=0x0
:3:hip_platform.cpp         :676 : 231293816787 us: 142677: [tid:0x7fa93a134080] ihipLaunchKernel: Returned hipSuccess : 
:3:hip_module.cpp           :509 : 231293816790 us: 142677: [tid:0x7fa93a134080] hipLaunchKernel: Returned hipSuccess : 
It took me 0.261408 seconds.
Bypassing hipFree/free...
GG: ROCclr: Program(public RuntimeObject)::unload() entered...
  GG: ROCclr: Program::(RuntimeObject): Kernel Name: 
GG: ROCclr: Program(public HeapObject)::runFiniKernel() entered...
GG: ROCclr: Program(public HeapObject)::runInitFiniKernel()(2) entered...
:3:devprogram.cpp           :3011: 231293816838 us: 142677: [tid:0x7fa93a134080] For Init/Fini: Kernel Name: _Z2k1v
GG: ROCclr: Program(public RuntimeObject)::unload() entered...
  GG: ROCclr: Program::(RuntimeObject): Kernel Name: 
GG: ROCclr: Program(public RuntimeObject)::unload() entered...
  GG: ROCclr: Program::(RuntimeObject): Kernel Name: 
GG: ROCclr: Program(public RuntimeObject)::unload() entered...
  GG: ROCclr: Program::(RuntimeObject): Kernel Name: 
